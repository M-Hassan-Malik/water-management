{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:prettier/recommended"
  ],
  // "rules": {
  //   "prettier/prettier": [
  //     "error",
  //     {
  //       "singleQuote": true,
  //       "endOfLine": "auto"
  //     }
  //   ]
  // },
  // "ignoreDuringBuilds": true,
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": [
        "**/*.ts",
        "**/*.tsx"
      ],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "simple-import-sort"
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        // "prettier/prettier": [
        //   "error",
        //   {
        //     "singleQuote": true,
        //     "endOfLine": "auto"
        //   }
        // ],
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/naming-convention": "off", // Avoid PascalCase Name Errors
        "no-underscore-dangle": "off", // Avoid errors on variables starting with "_"
        "no-param-reassign": "off", // Avoid errors on re-assigning on function parameters
        "no-nested-ternary": "off", // Avoid errors for nested turnary operatiors
        "no-await-in-loop": "off", // Avoid errors for using await inside loop {REMOVE it ASAP}
        "no-plusplus": "off", // Avoid errors for using incremental operation via ++
        "no-new": "off", // Avoid errors for using "new" keyword
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "@typescript-eslint/return-await": "off", 
        "no-restricted-syntax": [
          "error",
          "ForInStatement",
          "LabeledStatement",
          "WithStatement"
        ], // Overrides Airbnb configuration and enable no-restricted-syntax
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "off", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-unused-expressions": "off", // Returning an awaited value that is not a promise is not allowed (OFF)
        "unused-imports/no-unused-imports": "error",
        "no-console": "off",
        "import/no-cycle": "off",
        "tailwindcss/no-custom-classname": "off",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ]
      }
    },
    // Configuration for testing
    {
      "files": [
        "**/*.test.ts",
        "**/*.test.tsx"
      ],
      "plugins": [
        "jest",
        "jest-formatting",
        "testing-library",
        "jest-dom"
      ],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ]
    },
    // Configuration for e2e testing (Cypress)
    {
      "files": [
        "cypress/**/*.ts"
      ],
      "plugins": [
        "cypress"
      ],
      "extends": [
        "plugin:cypress/recommended"
      ],
      "parserOptions": {
        "project": "./cypress/tsconfig.json"
      }
    },
    // Configuration for Storybook
    {
      "files": [
        "*.stories.*"
      ],
      "extends": [
        "plugin:storybook/recommended"
      ],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true
          }
        ]
      }
    }
  ]
}